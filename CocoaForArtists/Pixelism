//
//  CFACanvas.h
//  CodeSamples
//
//	A Cocoa For Artists project
//  Created by Travis Kirton
//

#import "CFACanvas.h"
@interface CFACanvas (private)
float blockWidth;
float blockHeight;
float block;
float stripeWidth;
float left;
float top;

CFAImage *image;
@end

@implementation CFACanvas

-(void)setup {
	//Usually you should set up your canvas first
	//But, since we use the image dimensions to set the canvas size, we should create the image first...
	image = [CFAImage imageName:@"3dmaze" andType:@"JPG"];

	[self windowWidth:image.imageWidth andHeight:image.imageHeight];
	[self background:1.0f];
	
	//stripe = width of 1 color
	stripeWidth = [CFAMath maxOfA:1 andB:self.canvasWidth/image.imageWidth];
	//block = 3 * 3 colors (keeping things square)
	blockHeight = stripeWidth*3;
	blockWidth = blockHeight;
	
	[image loadPixelData];
	[CFAShape fill];
	[CFAShape noStroke];
}

-(void)draw {
	[self background:0];
	//iterate through the y coordinates of our image
	for(int y = 0; y <= image.imageHeight; y+=blockHeight) {
		//map a y position from our image to y position in our canvas
		int y1 = [CFAMath map:y fromMin:0 max:image.imageHeight toMin:0 max:self.canvasHeight];
		//iterate through the x coordinates of our image
		for(int x = 0; x <= image.imageWidth; x+=blockWidth) {
			//map an x position from our image to an x position in our canvas
			int x1 = [CFAMath map:x fromMin:0 max:image.imageWidth toMin:0 max:self.canvasWidth];
			
			//grab the color from our image at (x,y)
			CFAColor *pixelColor = [image colorAtX:x andY:y];
			
			//create a block of colors
			[CFAShape fillRed:[[pixelColor nsColor] redComponent] green:0 blue:0];
			[CFAShape rectWithXPos:x1+stripeWidth*0 yPos:y1 width:stripeWidth andHeight:blockHeight];
			
			[CFAShape fillRed:0 green:[[pixelColor nsColor] greenComponent] blue:0];
			[CFAShape rectWithXPos:x1+stripeWidth*1 yPos:y1 width:stripeWidth andHeight:blockHeight];
			
			[CFAShape fillRed:0 green:0 blue:[[pixelColor nsColor] blueComponent]];
			[CFAShape rectWithXPos:x1+stripeWidth*2 yPos:y1 width:stripeWidth andHeight:blockHeight];
		}
	}
}
@end